version: '3'

services:
  adoption-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: animals_db
    ports:
      - "3336:3306"
    volumes:
      - adoption-db:/var/lib/mysql
      - ./permissions.sql:/docker-entrypoint-initdb.d/1.sql
    container_name: adoption-db
  animal-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: animals_db
    ports:
      - "3346:3306"
    volumes:
      - animal-db:/var/lib/mysql
      - ./permissions.sql:/docker-entrypoint-initdb.d/1.sql      
    container_name: animal-db
  auth-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: animals_db
    ports:
      - "3356:3306"
    volumes:
      - auth-db:/var/lib/mysql
      - ./permissions.sql:/docker-entrypoint-initdb.d/1.sql      
    container_name: auth-db
  rabbitmq:
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
     - "5672:5672"
     - "15672:15672"
    container_name: rabbitmq
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    volumes:
      - ./animal-shelter-volumes/zookeeper/data:/data
      - ./animal-shelter-volumes/zookeeper/datalog:/datalog
    container_name: zookeeper
  kafka-server-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server-1:9092,PLAINTEXT_HOST://kafka-server-1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./animal-shelter-volumes/kafka1/data:/var/lib/kafka/data
    container_name: kafka-server-1
  kafka-server-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server-2:9092,PLAINTEXT_HOST://kafka-server-2:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./animal-shelter-volumes/kafka2/data:/var/lib/kafka/data
    container_name: kafka-server-2
  manager:
    image: sheepkiller/kafka-manager
    ports:
      - 9000:9000
    environment:
      ZK_HOSTS: zookeeper:2181
    container_name: manager
    depends_on:
      - zookeeper
  service-discovery:
    build:
      context: ./service-discovery
    ports:
      - "8761:8761"
  animal-shelter-service:
    build:
      context: ./animal-shelter
    ports:
      - "8084:8084"
    container_name: animal-shelter-service
    depends_on:
      - service-discovery
      - animal-db
      - kafka-server-1
  adoption-service:
    build: 
      context: ./adoption-service
    ports:
      - "8083:8083"
    container_name: adoption-service
    depends_on:
      - service-discovery
      - adoption-db
      - rabbitmq
      - kafka-server-1
  auth-service:
    build:
      context: ./auth-service
    ports: 
      - "8082:8082"
    container_name: auth-service
    depends_on:
      - service-discovery
      - auth-db
      - kafka-server-1
  email-service:
    build:
      context: ./email-service
    ports:
      - "8085:8085"
    container_name: email-service
    depends_on:
      - service-discovery
      - rabbitmq    
  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8081:8081"
    container_name: api-gateway
    depends_on:
      - service-discovery
      - animal-shelter-service
      - adoption-service
      - auth-service
      - email-service
  animal-micro-frontend:
    build:
      context: ./animal-shelter-frontend/animal
    ports:
      - "9002:9002"
    container_name: animal-micro-frontend
    depends_on:
      - animal-shelter-service
      - adoption-service
      - auth-service
      - email-service
  adoption-micro-frontend:
    build:
      context: ./animal-shelter-frontend/adoption
    ports:
      - "9003:9003"
    container_name: adoption-micro-frontend
    depends_on:
      - animal-shelter-service
      - adoption-service
      - auth-service
      - email-service
  main-micro-frontend:
    build:
      context: ./animal-shelter-frontend/main
    ports:
      - "9001:9001"
    container_name: main-micro-frontend
    depends_on:
      - adoption-micro-frontend
      - animal-micro-frontend
      - animal-shelter-service
      - adoption-service
      - auth-service
      - email-service
volumes:
  animal-db:
  adoption-db:
  auth-db: